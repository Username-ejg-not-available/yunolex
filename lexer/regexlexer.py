#!/usr/bin/env python3
import lexer.lex 

lexer.lex.rules = {
    0: {'regex': '[(]', 'action': 'LPAREN false', 'dfa': {'startState': 0, 'sigma': ['('], 'finStates': [0, 1], 'deltaT': [[[1]], [[]]]}},
    1: {'regex': '[)]', 'action': 'RPAREN false', 'dfa': {'startState': 0, 'sigma': [')'], 'finStates': [0, 1], 'deltaT': [[[1]], [[]]]}},
    2: {'regex': '[[]', 'action': 'LBRAC false', 'dfa': {'startState': 0, 'sigma': ['['], 'finStates': [0, 1], 'deltaT': [[[1]], [[]]]}},
    3: {'regex': ']', 'action': 'RBRAC false', 'dfa': {'startState': 0, 'sigma': [']'], 'finStates': [1], 'deltaT': [[[1]], [[]]]}},
    4: {'regex': '[^^*+?|.()\\\\]', 'action': 'LETTER true', 'dfa': {'startState': 0, 'sigma': ['4', 'k', 'W', 'J', '\n', 'R', '[', 'i', 'z', '%', 'F', 'v', 'e', 'u', 'n', 'l', '`', 'B', '0', 'T', 's', 'f', 'G', 'I', '_', '@', 'm', 'Y', '8', 'K', '>', '{', '&', '~', ';', 'V', 'q', '7', ']', 'N', '<', 'A', "'", 'x', 'P', 'L', 'o', 'S', '!', 't', '2', '$', '=', 'U', 'X', '}', 'g', '1', 'p', '5', ' ', '-', 'y', ',', 'c', 'Q', 'M', 'w', 'j', '"', 'O', '3', 'D', 'b', '9', 'E', 'd', ':', 'Z', 'h', '#', '/', '6', 'H', 'a', 'r', 'C', '\t'], 'finStates': [0, 1], 'delta}},
    5: {'regex': '[*]', 'action': 'KLEENE false', 'dfa': {'startState': 0, 'sigma': ['*'], 'finStates': [0, 1], 'deltaT': [[[1]], [[]]]}},
    6: {'regex': '[?]', 'action': 'QUESTION false', 'dfa': {'startState': 0, 'sigma': ['?'], 'finStates': [0, 1], 'deltaT': [[[1]], [[]]]}},
    7: {'regex': '[+]', 'action': 'PLUS false', 'dfa': {'startState': 0, 'sigma': ['+'], 'finStates': [0, 1], 'deltaT': [[[1]], [[]]]}},
    8: {'regex': '^', 'action': 'CARET false', 'dfa': {'startState': 0, 'sigma': ['^'], 'finStates': [1], 'deltaT': [[[1]], [[]]]}},
    9: {'regex': '[|]', 'action': 'ALTERNATE false', 'dfa': {'startState': 0, 'sigma': ['|'], 'finStates': [0, 1], 'deltaT': [[[1]], [[]]]}},
    10: {'regex': '-', 'action': 'HYPHEN false', 'dfa': {'startState': 0, 'sigma': [None], 'finStates': [1], 'deltaT': [[[1]], [[]]]}},
    11: {'regex': '\\\\n', 'action': 'NEWLINE false', 'dfa': {'startState': 0, 'sigma': ['\\'], 'finStates': [1], 'deltaT': [[[1]], [[]]]}},
    12: {'regex': '\\\\_', 'action': 'SPACE false', 'dfa': {'startState': 0, 'sigma': ['\\'], 'finStates': [1], 'deltaT': [[[1]], [[]]]}},
    13: {'regex': '\\\\\\\\', 'action': 'BSLASH false', 'dfa': {'startState': 0, 'sigma': ['\\'], 'finStates': [2], 'deltaT': [[[1]], [[2]], [[]]]}},
    14: {'regex': "\\\\'", 'action': 'SQUOTE false', 'dfa': {'startState': 0, 'sigma': ['\\'], 'finStates': [1], 'deltaT': [[[1]], [[]]]}},
    15: {'regex': '\\\\"', 'action': 'DQUOTE false', 'dfa': {'startState': 0, 'sigma': ['\\'], 'finStates': [1], 'deltaT': [[[1]], [[]]]}},
    16: {'regex': '\\\\t', 'action': 'TAB false', 'dfa': {'startState': 0, 'sigma': ['\\'], 'finStates': [1], 'deltaT': [[[1]], [[]]]}},
    17: {'regex': '[.]', 'action': 'WILDCARD false', 'dfa': {'startState': 0, 'sigma': ['.'], 'finStates': [0, 1], 'deltaT': [[[1]], [[]]]}},
    18: {'regex': '\\_|\\t|\\n', 'action': '(SKIP)', 'dfa': {'startState': 0, 'sigma': [' ', '\t', '\n'], 'finStates': [1, 2, 3], 'deltaT': [[[1], [2], [3]], [[], [], []], [[], [], []], [[], [], []]]}},
    19: {'regex': '.', 'action': '(ERR) "Bad input"', 'dfa': {'startState': 0, 'sigma': ['\t', '~', '}', '|', '{', 'z', 'y', 'x', 'w', 'v', 'u', 't', 's', 'r', 'q', 'p', 'o', 'n', 'm', 'l', 'k', 'j', 'i', 'h', 'g', 'f', 'e', 'd', 'c', 'b', 'a', '`', '_', '^', ']', '\\', '[', 'Z', 'Y', 'X', 'W', 'V', 'U', 'T', 'S', 'R', 'Q', 'P', 'O', 'N', 'M', 'L', 'K', 'J', 'I', 'H', 'G', 'F', 'E', 'D', 'C', 'B', 'A', '@', '?', '>', '=', '<', ';', ':', '9', '8', '7', '6', '5', '4', '3', '2', '1', '0', '/', '.', '-', ',', '+', '*', ')', '(', "'", '&', '%', '$', '#', '"', '!', ' '], 'finStates': [1], 'delta}},
}
